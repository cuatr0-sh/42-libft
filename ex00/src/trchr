[4mmemcmp[24m(3)                               Library Functions Manual                               [4mmemcmp[24m(3)

[1mNAME[0m
       memcmp - compare memory areas

[1mLIBRARY[0m
       Standard C library ([4mlibc[24m, [4m-lc[24m)

[1mSYNOPSIS[0m
       [1m#include <string.h>[0m

       [1mint memcmp(const void [4m[22ms1[24m[1m[.[4m[22mn[24m[1m], const void [4m[22ms2[24m[1m[.[4m[22mn[24m[1m], size_t [4m[22mn[24m[1m);[0m

[1mDESCRIPTION[0m
       The  [1mmemcmp[22m() function compares the first [4mn[24m bytes (each interpreted as [4munsigned[24m [4mchar[24m) of the mem‐
       ory areas [4ms1[24m and [4ms2[24m.

[1mRETURN VALUE[0m
       The [1mmemcmp[22m() function returns an integer less than, equal to, or greater than zero if the first [4mn[0m
       bytes of [4ms1[24m is found, respectively, to be less than, to match, or be greater  than  the  first  [4mn[0m
       bytes of [4ms2[24m.

       For  a  nonzero  return  value,  the sign is determined by the sign of the difference between the
       first pair of bytes (interpreted as [4munsigned[24m [4mchar[24m) that differ in [4ms1[24m and [4ms2[24m.

       If [4mn[24m is zero, the return value is zero.

[1mATTRIBUTES[0m
       For an explanation of the terms used in this section, see [1mattributes[22m(7).
       ┌─────────────────────────────────────────────────────────────────────┬───────────────┬─────────┐
       │ [1mInterface                                                           [22m│ [1mAttribute     [22m│ [1mValue   [22m│
       ├─────────────────────────────────────────────────────────────────────┼───────────────┼─────────┤
       │ [1mmemcmp[22m()                                                            │ Thread safety │ MT-Safe │
       └─────────────────────────────────────────────────────────────────────┴───────────────┴─────────┘

[1mSTANDARDS[0m
       C11, POSIX.1-2008.

[1mHISTORY[0m
       POSIX.1-2001, C89, SVr4, 4.3BSD.

[1mCAVEATS[0m
       Do not use [1mmemcmp[22m() to compare confidential data, such as cryptographic secrets, because the  CPU
       time required for the comparison depends on the contents of the addresses compared, this function
       is subject to timing-based side-channel attacks.  In such cases, a function that performs compar‐
       isons  in  deterministic  time, depending only on [4mn[24m (the quantity of bytes compared) is required.
       Some operating systems provide such a function (e.g., NetBSD's [1mconsttime_memequal[22m()), but no such
       function is specified in POSIX.  On Linux, you may need to implement such a function yourself.

[1mSEE ALSO[0m
       [1mbstring[22m(3), [1mstrcasecmp[22m(3), [1mstrcmp[22m(3), [1mstrcoll[22m(3), [1mstrncasecmp[22m(3), [1mstrncmp[22m(3), [1mwmemcmp[22m(3)

Linux man-pages 6.7                            2023-10-31                                      [4mmemcmp[24m(3)
